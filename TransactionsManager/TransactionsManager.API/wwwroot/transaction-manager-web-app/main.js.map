{"version":3,"sources":["./src/app/core/utils.ts","./src/app/services/loader.service.ts","./src/app/import-dialog/import-dialog.component.ts","./src/app/import-dialog/import-dialog.component.html","./src/environments/environment.ts","./src/app/core/material.module.ts","./src/app/services/http.service.ts","./src/app/remove-transaction-dialog/remove-transaction-dialog.component.ts","./src/app/remove-transaction-dialog/remove-transaction-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/update-transaction-status-dialog/update-transaction-status-dialog.component.ts","./src/app/update-transaction-status-dialog/update-transaction-status-dialog.component.html","./src/app/app.module.ts","./src/app/loader/loader.component.ts","./src/app/loader/loader.component.html","./src/app/interceptors/loader.interceptor.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class Utils {\r\n    public static API_BASE_URL = 'https://localhost:44353/api/';\r\n\r\n    public static printValueWithHeaderToConsole(header: string, value: any): void {\r\n        console.log('====================================================');\r\n        console.log(header);\r\n        console.log('====================================================');\r\n        console.dir(value);\r\n        console.log('-----------------------------------------------------');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LoaderService {\r\n\r\n    isLoading = new Subject<boolean>();\r\n\r\n    show(): void {\r\n        this.isLoading.next(true);\r\n    }\r\n\r\n    hide(): void {\r\n        this.isLoading.next(false);\r\n    }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../services/http.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Utils } from '../core/utils';\n\n@Component({\n  selector: 'app-import-dialog',\n  templateUrl: './import-dialog.component.html',\n  styleUrls: ['./import-dialog.component.css']\n})\nexport class ImportDialogComponent implements OnInit {\n\n  importDataForm: FormGroup;\n\n  constructor(\n    fb: FormBuilder,\n    public dialogRef: MatDialogRef<ImportDialogComponent>,\n    private httpService: HttpService,\n    private snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.importDataForm = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto',\n    });\n  }\n\n  public hasError = (controlName: string, errorName: string) => {\n    return this.importDataForm.controls[controlName].hasError(errorName);\n  }\n\n  ngOnInit(): void {\n    this.importDataForm = new FormGroup({\n      importFile: new FormControl('',\n        [\n          Validators.required\n        ]),\n    });\n  }\n\n  onImportFileChange(event: any): void {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.importDataForm.get('importFile')?.setValue(file);\n    }\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    if (this.importDataForm.get('importFile')?.value === '') {\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', this.importDataForm.get('importFile')?.value);\n\n    this.httpService.import(formData).subscribe(data => {\n      if (data.status === true) {\n        this.dialogRef.close();\n      } else {\n        let errorMessage;\n\n        if (data.errors == null || data.errors === undefined) {\n          errorMessage = data.errors;\n        } else {\n          errorMessage = data.errors.join(', ');\n        }\n\n        this.snackBar.open(`An error occurred while trying to load data! Details: ${errorMessage}`, undefined, {\n          duration: 5000,\n        });\n      }\n    }, error => {\n      let errorMessage;\n\n      if (error.error.errors == null || error.error.errors === undefined) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = error.error.errors.join(', ');\n      }\n\n      this.snackBar.open(`An error occurred while trying to load data! Details: ${errorMessage}`, undefined, {\n        duration: 5000,\n      });\n    });\n  }\n}\n","<p style=\"font-weight: bold;\">\n    Select file (*.csv) to import data\n</p>\n\n<form [formGroup]=\"importDataForm\" (ngSubmit)=\"onSubmit()\">\n    <div mat-dialog-content>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <input type=\"file\" formControlName=\"importFile\" name=\"importFile\" id=\"importFile\"\n                    (change)=\"onImportFileChange($event)\" accept=\".csv\" />\n            </div>\n            <div class=\"col-md-12 mt-3\">\n                <div class=\"float-right\">\n                    <button mat-raised-button class=\"mt-2 mb-2 mr-2\" (click)=\"onCancelClick()\">\n                        Cancel\n                    </button>\n\n                    <button type=\"submit\" mat-raised-button color=\"primary\" class=\"mt-2 mb-2 mr-2\">\n                        Import\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatAutocompleteModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatSelectModule,\r\n        MatSnackBarModule,\r\n        BrowserAnimationsModule,\r\n        MatProgressSpinnerModule,\r\n        MatIconModule,\r\n        MatPaginatorModule\r\n    ],\r\n    exports: [\r\n        CommonModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatAutocompleteModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatSelectModule,\r\n        MatSnackBarModule,\r\n        BrowserAnimationsModule,\r\n        MatProgressSpinnerModule,\r\n        MatIconModule,\r\n        MatPaginatorModule\r\n    ]\r\n})\r\n\r\nexport class MaterialDesignModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Utils } from '../core/utils';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    loadPagesOfNumber(pageSize: number): Observable<any> {\r\n        const params = new HttpParams().set('pageSize', pageSize.toString());\r\n        return this.http.get(`${Utils.API_BASE_URL}v1/Transaction/GetNumberOfPages`, { params });\r\n    }\r\n\r\n    loadTransactionPart(status: string | null, type: string | null, page: number, pageSize: number): Observable<any> {\r\n        let params = new HttpParams()\r\n            .set('page', page.toString())\r\n            .set('pageSize', pageSize.toString());\r\n\r\n        if (status != null) {\r\n            params = params.set('status', status);\r\n        }\r\n\r\n        if (type != null) {\r\n            params = params.set('type', type);\r\n        }\r\n\r\n        return this.http.get(`${Utils.API_BASE_URL}v1/Transaction/GetPart`, { params });\r\n    }\r\n\r\n    removeTransaction(transactionId: number): Observable<any> {\r\n        const params = new HttpParams().set('TransactionId', transactionId.toString());\r\n        return this.http.delete(`${Utils.API_BASE_URL}v1/Transaction/Delete`, { params });\r\n    }\r\n\r\n    updateTransactionStatus(transactionId: number, newStatus: string): Observable<any> {\r\n        return this.http.put(`${Utils.API_BASE_URL}v1/Transaction/Update`, {\r\n            TransactionId: transactionId,\r\n            Status: newStatus\r\n        });\r\n    }\r\n\r\n    import(formData: FormData): Observable<any> {\r\n        return this.http.post(`${Utils.API_BASE_URL}v1/Transaction/Import`, formData);\r\n    }\r\n\r\n    export(status: string | null, type: string | null): Observable<any> {\r\n        let parameters = new HttpParams();\r\n\r\n        const httpHeaders = new HttpHeaders()\r\n            .set('Accept', '*/*');\r\n\r\n        if (status != null) {\r\n            parameters = parameters.set('status', status);\r\n        }\r\n\r\n        if (type != null) {\r\n            parameters = parameters.set('type', type);\r\n        }\r\n\r\n        return this.http.get(`${Utils.API_BASE_URL}v1/Transaction/Export`, {\r\n            headers: httpHeaders,\r\n            params: parameters,\r\n            responseType: 'blob'\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../services/http.service';\nimport { Utils } from '../core/utils';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nexport interface DialogData {\n  transactionId: number;\n}\n\n@Component({\n  selector: 'app-remove-transaction-dialog',\n  templateUrl: './remove-transaction-dialog.component.html',\n  styleUrls: ['./remove-transaction-dialog.component.css']\n})\nexport class RemoveTransactionDialogComponent implements OnInit {\n\n  transactionId = -1;\n\n  constructor(\n    public dialogRef: MatDialogRef<RemoveTransactionDialogComponent>,\n    private httpService: HttpService,\n    private snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n\n    this.transactionId = data.transactionId;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close();\n  }\n\n  onRemoveClick(): void {\n\n    if (this.transactionId === -1) {\n      return;\n    }\n\n    this.httpService.removeTransaction(this.transactionId).subscribe(data => {\n\n      if (data.status === true) {\n        this.dialogRef.close(true);\n      } else {\n        let errorMessage;\n\n        if (data.errors == null || data.errors === undefined) {\n          errorMessage = data.errors;\n        } else {\n          errorMessage = data.errors.join(', ');\n        }\n\n        this.snackBar.open(`An error occurred while trying to load data! Details: ${errorMessage}`, undefined, {\n          duration: 5000,\n        });\n      }\n    }, error => {\n      let errorMessage;\n\n      if (error.error.errors == null || error.error.errors === undefined) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = error.error.errors.join(', ');\n      }\n\n      this.snackBar.open(`An error occurred while trying to load data! Details: ${errorMessage}`, undefined, {\n        duration: 5000,\n      });\n    });\n  }\n}\n","<p style=\"font-weight: bold;\">\n    Are you sure you want to delete the selected entry?\n</p>\n\n<div class=\"float-right\">\n    <button mat-raised-button class=\"mt-2 mb-2 mr-2\" (click)=\"onCancelClick()\">\n        Cancel\n    </button>\n\n    <button mat-raised-button color=\"warn\" class=\"mt-2 mb-2 mr-2\" (click)=\"onRemoveClick()\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"Icon\">delete</mat-icon>\n        Delete\n    </button>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatPaginatorIntl } from '@angular/material/paginator';\nimport { Utils } from './core/utils';\nimport { TransactionRecord } from './models/transactionRecord';\nimport { HttpService } from './services/http.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RemoveTransactionDialogComponent } from './remove-transaction-dialog/remove-transaction-dialog.component';\nimport { UpdateTransactionStatusDialogComponent } from './update-transaction-status-dialog/update-transaction-status-dialog.component';\nimport { ImportDialogComponent } from './import-dialog/import-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [HttpService, { provide: MatPaginatorIntl }]\n})\n\nexport class AppComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'status', 'type', 'clientName', 'amount', 'action'];\n  dataSource = new MatTableDataSource<TransactionRecord>();\n\n  statusList = ['Pending', 'Completed', 'Cancelled'];\n  typeList = ['Refill', 'Withdrawal'];\n\n  selectedStatus: string | null = null;\n  selectedType: string | null = null;\n\n  form = new FormGroup({\n    status: new FormControl(),\n    type: new FormControl()\n  });\n\n  page = 1;\n  count = 0;\n  tableSize = 10;\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n\n  constructor(\n    private httpService: HttpService,\n    private snackBar: MatSnackBar,\n    public dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.fetchTransactions();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  onImportClick(): void {\n    const dialogRef = this.dialog.open(ImportDialogComponent, {\n      width: '280px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.fetchTransactions();\n    });\n  }\n\n  onSelectStatus(event: any): void {\n    if (event.value === undefined) {\n      this.selectedStatus = null;\n    } else {\n      this.selectedStatus = event.value;\n    }\n\n    this.fetchTransactions(this.selectedStatus, this.selectedType, this.page, this.tableSize);\n  }\n\n  onSelectType(event: any): void {\n    if (event.value === undefined) {\n      this.selectedType = null;\n    } else {\n      this.selectedType = event.value;\n    }\n\n    this.fetchTransactions(this.selectedStatus, this.selectedType, this.page, this.tableSize);\n  }\n\n  onExportClick(): void {\n    this.httpService.export(this.selectedStatus, this.selectedType).subscribe(data => {\n      this.downloadFile(data);\n\n    }, error => {\n      this.showError(error);\n    });\n  }\n\n  showError(error: any): void {\n    let errorMessage = '';\n\n    if (error.error.errors == null || error.error.errors === undefined) {\n      errorMessage = error.message;\n    } else {\n      errorMessage = error.error.errors.join(', ');\n    }\n\n    this.snackBar.open(`An error occurred while trying to load data! Details: ${errorMessage}`, undefined, {\n      duration: 5000,\n    });\n  }\n\n  fetchTransactions(status: string | null = null, type: string | null = null, page: number = 1, pageSize: number = 10): void {\n    this.httpService.loadPagesOfNumber(this.tableSize).subscribe(data => {\n      if (data.status === true) {\n        if (data.data === 0) {\n          this.count = 0;\n        } else {\n          this.count = data.data * this.tableSize;\n          this.loadTransactions(status, type, 1, this.count);\n        }\n      }\n    }, error => {\n      this.showError(error);\n    });\n  }\n\n  loadTransactions(status: string | null = null, type: string | null = null, page: number = 1, pageSize: number = 10): void {\n    this.httpService.loadTransactionPart(status, type, 1, this.count).subscribe(data => {\n      if (data.status === true) {\n        this.dataSource.data = data.data;\n        this.count = data.data.length;\n      }\n    },\n      error => {\n        this.showError(error);\n      });\n  }\n\n  onDeleteClick(transactionId: number): void {\n    const dialogRef = this.dialog.open(RemoveTransactionDialogComponent, {\n      width: '370px',\n      data: { transactionId: transactionId }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        this.fetchTransactions();\n      }\n    });\n  }\n\n  onEditStatusClick(transactionId: number, status: string): void {\n    const dialogRef = this.dialog.open(UpdateTransactionStatusDialogComponent, {\n      width: '400px',\n      data: {\n        transactionId: transactionId,\n        currentStatus: status,\n        statusList: this.statusList\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        this.fetchTransactions();\n      }\n    });\n  }\n\n  downloadFile(data: any): void {\n    const blob = new Blob([data], { type: data.type });\n\n    // IE doesn't allow using a blob object directly as link href\n    // instead it is necessary to use msSaveOrOpenBlob\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(blob);\n      return;\n    }\n\n    // For other browsers:\n    // Create a link pointing to the ObjectURL containing the blob.\n    const urlData = window.URL.createObjectURL(blob);\n\n    let link = document.createElement('a');\n    link.href = urlData;\n\n    link.download = `Export_${new Date().toLocaleDateString()}.xlsx`;\n\n    // this is necessary as link.click() does not work on the latest firefox\n    link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));\n\n    setTimeout(() => {\n      // For Firefox it is necessary to delay revoking the ObjectURL\n      window.URL.revokeObjectURL(urlData);\n      link.remove();\n    }, 100);\n  }\n}\n","<div class=\"container-fluid\">\n  <app-loader></app-loader>\n</div>\n\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <span>Transactions manager App</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-2 ml-2 mr-2 mt-2\" style=\"border: solid 1.5px #000;\">\n      <div style=\"background: rgb(3, 156, 216);margin-left:-15px;margin-right:-15px; text-align: center;font-weight: bold;\">Transactions</div>\n    </div>\n    <div class=\"col-md-9\">\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <div class=\"float-left\">\n              <form [formGroup]=\"form\" autocomplete=\"off\" novalidate>\n                <mat-form-field class=\"col-md-auto mt-2\">\n                  <mat-label>Status</mat-label>\n                  <mat-select formControlName=\"status\" name=\"status\" id=\"status\"\n                    (selectionChange)=\"onSelectStatus($event)\">\n                    <mat-option>--- None ---</mat-option>\n                    <mat-option *ngFor=\"let item of statusList\" [value]=\"item\">\n                      {{item}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n                <mat-form-field class=\"col-md-auto mt-2\">\n                  <mat-label>Type</mat-label>\n                  <mat-select formControlName=\"type\" name=\"type\" id=\"type\" (selectionChange)=\"onSelectType($event)\">\n                    <mat-option>--- None ---</mat-option>\n                    <mat-option *ngFor=\"let item of typeList\" [value]=\"item\">\n                      {{item}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </form>\n            </div>\n          </div>\n          <div class=\"col-md-6 \">\n            <div class=\"float-right\">\n              <button mat-raised-button color=\"primary\" class=\"mt-2 mb-2 mr-2\" (click)=\"onImportClick()\">Import</button>\n              <button mat-raised-button color=\"primary\" class=\"mt-2 mb-2 mr-2\" (click)=\"onExportClick()\">Export</button>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <table mat-table [dataSource]=\"dataSource\">\n              <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef>Id</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.transactionId }}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"status\">\n                <th mat-header-cell *matHeaderCellDef>Status</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.status }}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"type\">\n                <th mat-header-cell *matHeaderCellDef>Type</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"clientName\">\n                <th mat-header-cell *matHeaderCellDef>Client name</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.clientName }}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"amount\">\n                <th mat-header-cell *matHeaderCellDef>Amount</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.amount }}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"action\">\n                <th mat-header-cell *matHeaderCellDef>Action</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  <button mat-raised-button color=\"primary\" class=\"mt-2 mb-2 mr-2\"\n                    (click)=\"onEditStatusClick(element.transactionId, element.status)\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Icon\">edit</mat-icon>\n                    Edit\n                  </button>\n                  <button mat-raised-button color=\"warn\" class=\"mt-2 mb-2 mr-2\"\n                    (click)=\"onDeleteClick(element.transactionId)\">\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Icon\">delete</mat-icon>\n                    Delete\n                  </button>\n                </td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"noRecord\">\n                <td mat-footer-cell *matFooterCellDef>No records</td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            </table>\n          </div>\n\n          <mat-paginator [pageSize]=\"10\" [length]=\"count\"></mat-paginator>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../services/http.service';\nimport { Utils } from '../core/utils';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormBuilder } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\n\nexport interface DialogData {\n  transactionId: number;\n  currentStatus: string;\n  statusList: any[]\n}\n\n@Component({\n  selector: 'app-update-transaction-status-dialog',\n  templateUrl: './update-transaction-status-dialog.component.html',\n  styleUrls: ['./update-transaction-status-dialog.component.css']\n})\nexport class UpdateTransactionStatusDialogComponent implements OnInit {\n\n  updateTransactionStatusForm: FormGroup;\n  selectedStatus = '';\n\n  statusList: any[];\n  transactionId = -1;\n  currrentStatus = '';\n\n  constructor(\n    fb: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateTransactionStatusDialogComponent>,\n    private httpService: HttpService,\n    private snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n\n    this.statusList = data.statusList;\n    this.transactionId = data.transactionId;\n    this.currrentStatus = data.currentStatus;\n\n    this.updateTransactionStatusForm = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto',\n    });\n  }\n\n  public hasError = (controlName: string, errorName: string) => {\n    return this.updateTransactionStatusForm.controls[controlName].hasError(errorName);\n  }\n\n  ngOnInit(): void {\n    this.updateTransactionStatusForm = new FormGroup({\n      status: new FormControl(this.currrentStatus,\n        [\n          Validators.required\n        ]),\n    });\n  }\n\n  onSelectStatus(event: any): void {\n    this.selectedStatus = event.value;\n  }\n\n  onCancelClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSaveClick(): void {\n\n    if (this.transactionId === -1 || this.selectedStatus === '') {\n      return;\n    }\n\n    this.httpService.updateTransactionStatus(this.transactionId, this.selectedStatus).subscribe(data => {\n      if (data.status === true) {\n        this.dialogRef.close(true);\n      } else {\n        let errorMessage;\n\n        if (data.errors == null || data.errors === undefined) {\n          errorMessage = data.errors;\n        } else {\n          errorMessage = data.errors.join(', ');\n        }\n\n        this.snackBar.open(`An error occurred while trying to load data! Details: ${errorMessage}`, undefined, {\n          duration: 5000,\n        });\n      }\n    }, error => {\n      let errorMessage;\n\n      if (error.error.errors == null || error.error.errors === undefined) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = error.error.errors.join(', ');\n      }\n\n      this.snackBar.open(`An error occurred while trying to load data! Details: ${errorMessage}`, undefined, {\n        duration: 5000,\n      });\n    });\n  }\n}\n","<p style=\"font-weight: bold;\">\n    Updating transaction status\n</p>\n\n<form [formGroup]=\"updateTransactionStatusForm\" autocomplete=\"off\" novalidate>\n    <div mat-dialog-content>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <mat-form-field class=\"col-md-12\">\n                    <mat-label>New transaction status</mat-label>\n                    <mat-select formControlName=\"status\" name=\"status\" id=\"status\"\n                        (selectionChange)=\"onSelectStatus($event)\" required>\n                        <mat-option>--- Select status ---</mat-option>\n                        <mat-option *ngFor=\"let item of statusList\" [value]=\"item\">\n                            {{item}}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"hasError('status', 'required')\">Please select a status</mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n    </div>\n</form>\n\n<div class=\"float-right\">\n    <button mat-raised-button class=\"mt-2 mb-2 mr-2\" (click)=\"onCancelClick()\">\n        Cancel\n    </button>\n\n    <button mat-raised-button color=\"primary\" class=\"mt-2 mb-2 mr-2\" (click)=\"onSaveClick()\">\n        Save\n    </button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialDesignModule } from './core/material.module';\n\nimport { HttpService } from './services/http.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoaderService } from './services/loader.service';\nimport { LoaderInterceptor } from './interceptors/loader.interceptor';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { RemoveTransactionDialogComponent } from './remove-transaction-dialog/remove-transaction-dialog.component';\nimport { UpdateTransactionStatusDialogComponent } from './update-transaction-status-dialog/update-transaction-status-dialog.component';\nimport { ImportDialogComponent } from './import-dialog/import-dialog.component';\nimport { LoaderComponent } from './loader/loader.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RemoveTransactionDialogComponent,\n    UpdateTransactionStatusDialogComponent,\n    ImportDialogComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialDesignModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ],\n  providers: [\n    HttpService,\n    LoaderService,\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LoaderService } from '../services/loader.service';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent {\n\n  color = 'primary';\n  mode: ProgressSpinnerMode = 'indeterminate';\n  value = 50;\n  isLoading: Subject<boolean> = this.loaderService.isLoading;\n\n  constructor(private loaderService: LoaderService) { }\n}\n","<div *ngIf=\"isLoading | async\" class=\"overlay\">\n    <mat-progress-spinner class=\"spinner\" [color]=\"color\" [mode]=\"mode\" [value]=\"value\">\n    </mat-progress-spinner>\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { finalize } from \"rxjs/operators\";\r\nimport { LoaderService } from '../services/loader.service';\r\n\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n    constructor(public loaderService: LoaderService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        this.loaderService.show();\r\n\r\n        return next.handle(req).pipe(\r\n            finalize(() => this.loaderService.hide())\r\n        );\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}